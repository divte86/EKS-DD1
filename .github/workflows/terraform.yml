name: 'Terraform Infrastructure Provisioning'

on:
  # Trigger when a PR is opened or changes to the main branch
  pull_request:
    paths:
      - 'network.tf'
      - 'iam_roles.tf'
      - 'eks-cluster.tf'
      - 'outputs.tf'
  push:
    branches:
      - main
    paths:
      - 'network.tf'
      - 'iam_roles.tf'
      - 'eks-cluster.tf'
      - 'outputs.tf'

jobs:
  terraform:
    name: 'Terraform Plan and Apply'
    runs-on: ubuntu-latest

    env:
      AWS_REGION: 'us-west-2'
      TF_BACKEND_BUCKET: ${{ secrets.TF_BACKEND_BUCKET }}
      TF_BACKEND_KEY: ${{ secrets.TF_BACKEND_KEY }}
      TF_BACKEND_REGION: ${{ secrets.TF_BACKEND_REGION }}
      
    steps:
      # Checkout the repository
      - name: 'Checkout code'
        uses: actions/checkout@v3

      # Set up Terraform
      - name: 'Set up Terraform'
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0  # Adjust version as needed

      # Set up AWS credentials using GitHub Secrets
      - name: 'Configure AWS credentials'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Initialize Terraform (with backend config for remote state)
      - name: 'Terraform Init'
        run: |
          terraform init \
            -backend-config="bucket=${{ env.TF_BACKEND_BUCKET }}" \
            -backend-config="key=${{ env.TF_BACKEND_KEY }}" \
            -backend-config="region=${{ env.TF_BACKEND_REGION }}"

      # Terraform Plan
      - name: 'Terraform Plan'
        id: plan
        run: terraform plan -out=tfplan

      # Approve before applying in production environment
      - name: 'Terraform Apply'
        if: github.ref == 'refs/heads/main'
        run: terraform apply tfplan
